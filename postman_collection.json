{
	"info": {
		"_postman_id": "c32a71fc-8731-41f8-8a2e-3f57022f314d",
		"name": "Courses  API 1 - CRUD",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "25471001"
	},
	"item": [
		{
			"name": "Login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()",
							"var token = jsonData.accessToken",
							"",
							"pm.environment.set(\"token\", token);",
							"",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"email\": \"nordine1@mail.com\",\n    \"password\": \"bestPassw0rd\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/login",
					"host": [
						"{{url}}"
					],
					"path": [
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Post course",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// 1- Convert response to Json",
							"var jsonFile = pm.response.json()",
							"",
							"// 2- Variable courseID to stock the the \"id\" of the response",
							"var courseID = jsonFile.id",
							"",
							"// 3- Snippet Postman -> to set variable in environment (new variable in environment)",
							"pm.environment.set(\"courseID\", courseID);",
							"",
							"// Snippet Postman -> to set Globale variable (new Globale variable )",
							"// pm.globals.set(\"variable_key\", \"variable_value\");",
							"",
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n \"title\": \"Javascript\",\n \"description\": \"Full Javascript course from zero\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/660/courses",
					"host": [
						"{{url}}"
					],
					"path": [
						"660",
						"courses"
					]
				},
				"description": "To add new course"
			},
			"response": []
		},
		{
			"name": "Get course",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"",
							"",
							"// Check the status code",
							"pm.test(\"Check that the API code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"// Check if response time is less than (xxx)",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							"",
							"",
							"// ***  Method to check in result if the \"title\" of Json file is equals to \"Postman\" ***",
							"",
							"/*",
							"",
							"pm.test(\"Check the title of the fist course\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.title).to.eql(\"Javascript\");",
							"});",
							"",
							"*/"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/660/courses/{{courseID}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"660",
						"courses",
						"{{courseID}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Edit course",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n \"title\": \"Javascript2\",\n \"description\": \"Full Javascript course from zero\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/660/courses/{{courseID}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"660",
						"courses",
						"{{courseID}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete course",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/660/courses/{{courseID}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"660",
						"courses",
						"{{courseID}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get course after delete",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"",
							"",
							"// Check the status code after delete",
							"pm.test(\"Check that the API code is 404\", function () {",
							"    pm.response.to.have.status(404);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/660/courses/{{courseID}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"660",
						"courses",
						"{{courseID}}"
					]
				}
			},
			"response": []
		}
	]
}